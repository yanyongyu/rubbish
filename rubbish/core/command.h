/* Generated by Cython 0.29.23 */

#ifndef __PYX_HAVE__rubbish__core__command
#define __PYX_HAVE__rubbish__core__command

#include "Python.h"
struct word_list;
struct redirect;
union command_info;
struct command;
struct connection;
struct simple_cm;

/* "rubbish/core/command.pxd":1
 * cpdef public enum CommandType "command_type":             # <<<<<<<<<<<<<<
 *     cm_simple
 *     cm_connection
 */
enum command_type {
  cm_simple,
  cm_connection
};

/* "rubbish/core/command.pxd":5
 *     cm_connection
 * 
 * cpdef public enum RedirectInstruction "redirect_instruction":             # <<<<<<<<<<<<<<
 *     r_output_direction
 *     r_input_direction
 */
enum redirect_instruction {
  r_output_direction,
  r_input_direction
};

/* "rubbish/core/command.pxd":9
 *     r_input_direction
 * 
 * cdef public struct word_list:             # <<<<<<<<<<<<<<
 *     word_list *next
 *     char *word
 */
struct word_list {
  struct word_list *next;
  char *word;
};

/* "rubbish/core/command.pxd":13
 *     char *word
 * 
 * ctypedef public word_list WORD_LIST             # <<<<<<<<<<<<<<
 * 
 * cdef public struct redirect:
 */
typedef struct word_list WORD_LIST;

/* "rubbish/core/command.pxd":15
 * ctypedef public word_list WORD_LIST
 * 
 * cdef public struct redirect:             # <<<<<<<<<<<<<<
 *     redirect *next
 *     char *redirector
 */
struct redirect {
  struct redirect *next;
  char *redirector;
  enum redirect_instruction instruction;
  char *redirectee;
};

/* "rubbish/core/command.pxd":21
 *     char *redirectee
 * 
 * ctypedef public redirect REDIRECT             # <<<<<<<<<<<<<<
 * 
 * cdef public union command_info:
 */
typedef struct redirect REDIRECT;

/* "rubbish/core/command.pxd":23
 * ctypedef public redirect REDIRECT
 * 
 * cdef public union command_info:             # <<<<<<<<<<<<<<
 *     connection *Connection
 *     simple_cm *Simple
 */
union command_info {
  struct connection *Connection;
  struct simple_cm *Simple;
};

/* "rubbish/core/command.pxd":27
 *     simple_cm *Simple
 * 
 * ctypedef public command_info COMMAND_INFO             # <<<<<<<<<<<<<<
 * 
 * cdef public struct command:
 */
typedef union command_info COMMAND_INFO;

/* "rubbish/core/command.pxd":29
 * ctypedef public command_info COMMAND_INFO
 * 
 * cdef public struct command:             # <<<<<<<<<<<<<<
 *     CommandType type
 *     command_info info
 */
struct command {
  enum command_type type;
  union command_info info;
};

/* "rubbish/core/command.pxd":33
 *     command_info info
 * 
 * ctypedef public command COMMAND             # <<<<<<<<<<<<<<
 * 
 * cdef public struct connection:
 */
typedef struct command COMMAND;

/* "rubbish/core/command.pxd":35
 * ctypedef public command COMMAND
 * 
 * cdef public struct connection:             # <<<<<<<<<<<<<<
 *     COMMAND *first
 *     COMMAND *second
 */
struct connection {
  COMMAND *first;
  COMMAND *second;
  char connector;
};

/* "rubbish/core/command.pxd":40
 *     char connector
 * 
 * ctypedef public connection CONNECTION             # <<<<<<<<<<<<<<
 * 
 * cdef public struct simple_cm:
 */
typedef struct connection CONNECTION;

/* "rubbish/core/command.pxd":42
 * ctypedef public connection CONNECTION
 * 
 * cdef public struct simple_cm:             # <<<<<<<<<<<<<<
 *     WORD_LIST *words
 *     REDIRECT *redirects
 */
struct simple_cm {
  WORD_LIST *words;
  REDIRECT *redirects;
};

/* "rubbish/core/command.pxd":46
 *     REDIRECT *redirects
 * 
 * ctypedef public simple_cm SIMPLE_COMMAND             # <<<<<<<<<<<<<<
 * 
 * cdef class Redirect:
 */
typedef struct simple_cm SIMPLE_COMMAND;

#ifndef __PYX_HAVE_API__rubbish__core__command

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

#endif /* !__PYX_HAVE_API__rubbish__core__command */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initcommand(void);
#else
PyMODINIT_FUNC PyInit_command(void);
#endif

#endif /* !__PYX_HAVE__rubbish__core__command */
